static_resources:
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 8080
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: backend
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/Wallbox"
                  # grpc: {}
                route:
                  cluster: server
                  #max_grpc_timeout: 0s
              - match:
                  prefix: "/"
                route:
                  cluster: client
              cors:
                allow_origin:
                - "*"
                allow_methods: GET, PUT, DELETE, POST, OPTIONS
                allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                max_age: "1728000"
                expose_headers: custom-header-1,grpc-status,grpc-message
          http_filters:
          - name: envoy.grpc_web
          - name: envoy.cors
          - name: envoy.router
            typed_config: {}
  clusters:
  - name: client
    connect_timeout: 0.25s
    type: strict_dns
    lb_policy: round_robin
    http2_protocol_options: {}
    load_assignment:
      cluster_name: client
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 4200
  - name: server
    connect_timeout: 0.25s
    type: logical_dns
    lb_policy: round_robin
    http2_protocol_options: {}
    hosts: [{ socket_address: { address: 127.0.0.1, port_value: 50051 }}]
    #load_assignment:
    #  cluster_name: server
    #  endpoints:
    #  - lb_endpoints:
    #    - endpoint:
    #        address:
    #          socket_address:
    #            address: server
    #            port_value: 50051
    #- name: service2
    #- connect_timeout: 0.25s
    #- type: strict_dns
    #- lb_policy: round_robin
    #- http2_protocol_options: {}
    #- load_assignment:
    #-   cluster_name: service2
    #-   endpoints:
    #-   - lb_endpoints:
    #-     - endpoint:
    #-         address:
    #-           socket_address:
    #-             address: service2
    #-             port_value: 80
admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8001
