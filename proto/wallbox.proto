syntax = "proto3";

import "google/protobuf/api.proto";
//import "google/protobuf/timestamp.proto";

service Wallbox {
  // returns previous temps (if any) in date range, streams further temps
  // if enddate is greater than now or undefined
  rpc GetStatus(Empty) returns (Status) {}

  // add stream of temps, presumably as they are recorded
  //rpc RecordTemps(stream Temps) returns (google.protobuf.Empty) {}
  //rpc RecordTemps(stream Temps) returns (TempsWriteSummary) {}

}

message Empty {
}

message Status {
  int32 volume = 1; // 0 - 100
  int32 repeat = 2; // 0 or 1
  int32 random = 3; // 0 or 1
  string single = 4; // 0, 1, or oneshot [6]
  int32 consume = 5; // 0 or 1
  int32 playlist = 6; // 31-bit unsigned integer, the playlist version number
  int32 playlistlength = 7; // integer, the length of the playlist
  string state = 8; // play, stop, or pause
  int32 song = 9; // playlist song number of the current song stopped on or playing
  int32 songid = 10; // playlist songid of the current song stopped on or playing
  int32 nextsong = 11; // playlist song number of the next song to be played
  int32 nextsongid = 12; // playlist songid of the next song to be played
  int32 time = 13; // total time elapsed (of current playing/paused song) in seconds (deprecated, use elapsed instead)
  int32 elapsed = 14; // Total time elapsed within the current song in seconds, but with higher resolution.
  int32 duration = 15; // Duration of the current song in seconds.
  int32 bitrate = 16; // instantaneous bitrate in kbps
  int32 xfade = 17; // crossfade in seconds
  float mixrampdb = 18; // mixramp threshold in dB
  float mixrampdelay = 19; // mixrampdelay in seconds
  string audio = 20; // The format emitted by the decoder plugin during playback, format: samplerate:bits:channels. See Global Audio Format for a detailed explanation.
  string updating_db = 21; // job id
  string error = 22; // if there is an error, returns message here
}

message ListApisRequest {
}

message ListApisResponse {
  repeated google.protobuf.Api apis = 1;
}

message GetMethodRequest {
  string method = 1;
}
message GetMethodResponse {
  google.protobuf.Method method = 1;
}

service ServerReflection {
  rpc ListApis (ListApisRequest) returns (ListApisResponse);
  rpc GetMethod (GetMethodRequest) returns (GetMethodResponse);
}
